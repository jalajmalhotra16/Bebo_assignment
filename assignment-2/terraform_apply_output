PS C:\Users\Jalaj Malhotra\Documents\time to grow\bebo\Bebo_assignment\assignment-2> terraform apply --auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[1] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[2] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.internet_assignment will be created
  + resource "aws_internet_gateway" "internet_assignment" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[0] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[1] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[2] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[0] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[1] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[2] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[0] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[1] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[2] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[0] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[1] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[2] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[0] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.48.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[1] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.64.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[2] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.80.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[0] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[1] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[2] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.vpc_assignment will be created
  + resource "aws_vpc" "vpc_assignment" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 24 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + nat_gateway_id     = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnet_ids = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + public_subnet_ids  = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + vpc_id             = (known after apply)
module.vpc.aws_vpc.vpc_assignment: Creating...
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_eip.nat[2]: Creating...
module.vpc.aws_eip.nat[1]: Creating...
module.vpc.aws_eip.nat[2]: Creation complete after 2s [id=eipalloc-0a85d0013ef765cd5]
module.vpc.aws_eip.nat[0]: Creation complete after 2s [id=eipalloc-07bb16c1d0303c951]
module.vpc.aws_eip.nat[1]: Creation complete after 2s [id=eipalloc-0c9e49e7a2c4fd1fb]
module.vpc.aws_vpc.vpc_assignment: Creation complete after 4s [id=vpc-00f32b84645da4c41]
module.vpc.aws_internet_gateway.internet_assignment: Creating...
module.vpc.aws_subnet.private_subnets[1]: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creating...
module.vpc.aws_subnet.public_subnets[2]: Creating...
module.vpc.aws_subnet.private_subnets[0]: Creating...
module.vpc.aws_subnet.public_subnets[1]: Creating...
module.vpc.aws_subnet.public_subnets[0]: Creating...
module.vpc.aws_internet_gateway.internet_assignment: Creation complete after 1s [id=igw-08333217b3d830088]
module.vpc.aws_subnet.private_subnets[0]: Creation complete after 1s [id=subnet-03e6fd6d97376e6d3]
module.vpc.aws_route_table.public_rt: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creation complete after 2s [id=subnet-09b040ceea731fd9c]
module.vpc.aws_subnet.private_subnets[1]: Creation complete after 2s [id=subnet-05f4a21249b317499]
module.vpc.aws_route_table.public_rt: Creation complete after 3s [id=rtb-0bd35a384f4f845ed]
module.vpc.aws_subnet.public_subnets[2]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[1]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[0]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[1]: Creation complete after 12s [id=subnet-0ec2094c4048360b7]
module.vpc.aws_subnet.public_subnets[2]: Creation complete after 12s [id=subnet-0c2c6b5b541302e22]
module.vpc.aws_subnet.public_subnets[0]: Creation complete after 12s [id=subnet-0bd710b6f2001cd10]
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[1]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[2]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[0]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creation complete after 2s [id=rtbassoc-07dabf32002de4666]
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creation complete after 2s [id=rtbassoc-0386449ee83662f48]
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creation complete after 2s [id=rtbassoc-09e309359486d7a4e]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m21s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m21s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m31s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m31s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m31s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Creation complete after 1m39s [id=nat-0604d2be9320c81cf]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m41s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m41s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Creation complete after 1m49s [id=nat-0c1caf8ba0d4f4635]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m51s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Creation complete after 2m0s [id=nat-039edd29adb5d6993]
module.vpc.aws_route_table.private_rt[2]: Creating...
module.vpc.aws_route_table.private_rt[1]: Creating...
module.vpc.aws_route_table.private_rt[0]: Creating...
module.vpc.aws_route_table.private_rt[0]: Creation complete after 2s [id=rtb-0f8e054d101d847a1]
module.vpc.aws_route_table.private_rt[2]: Creation complete after 2s [id=rtb-028f3541c58bf1a6b]
module.vpc.aws_route_table.private_rt[1]: Creation complete after 2s [id=rtb-06e583342bffdd27b]
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creation complete after 1s [id=rtbassoc-03576f04636679f06]
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creation complete after 1s [id=rtbassoc-09e4dd64133376e9b]
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creation complete after 1s [id=rtbassoc-000db1bec44afe28c]

Apply complete! Resources: 24 added, 0 changed, 0 destroyed.

Outputs:

nat_gateway_id = [
  "nat-0c1caf8ba0d4f4635",
  "nat-0604d2be9320c81cf",
  "nat-039edd29adb5d6993",
]
private_subnet_ids = [
  "subnet-03e6fd6d97376e6d3",
  "subnet-05f4a21249b317499",
  "subnet-09b040ceea731fd9c",
]
public_subnet_ids = [
  "subnet-0bd710b6f2001cd10",
  "subnet-0ec2094c4048360b7",
  "subnet-0c2c6b5b541302e22",
]
vpc_id = "vpc-00f32b84645da4c41"
