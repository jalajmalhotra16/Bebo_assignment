PS C:\Users\Jalaj Malhotra\Documents\time to grow\bebo\Bebo_assignment\assignment-2> terraform apply --auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[1] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[2] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.internet_assignment will be created
  + resource "aws_internet_gateway" "internet_assignment" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[0] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[1] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[2] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[0] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[1] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[2] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[0] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[1] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[2] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[0] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[1] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[2] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[0] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.48.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[1] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.64.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[2] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.80.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[0] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[1] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[2] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.vpc_assignment will be created
  + resource "aws_vpc" "vpc_assignment" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 24 to add, 0 to change, 0 to destroy.
module.vpc.aws_eip.nat[1]: Creating...
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_eip.nat[2]: Creating...
module.vpc.aws_vpc.vpc_assignment: Creating...
module.vpc.aws_eip.nat[1]: Creation complete after 3s [id=eipalloc-049ef7f75e767b6fd]
module.vpc.aws_eip.nat[0]: Creation complete after 3s [id=eipalloc-06ec21b0ccc7e7706]
module.vpc.aws_eip.nat[2]: Creation complete after 3s [id=eipalloc-000eee9490ba41dba]
module.vpc.aws_vpc.vpc_assignment: Creation complete after 5s [id=vpc-0370bf0325b3d364d]
module.vpc.aws_internet_gateway.internet_assignment: Creating...
module.vpc.aws_subnet.public_subnets[0]: Creating...
module.vpc.aws_subnet.private_subnets[1]: Creating...
module.vpc.aws_subnet.public_subnets[1]: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creating...
module.vpc.aws_subnet.public_subnets[2]: Creating...
module.vpc.aws_subnet.private_subnets[0]: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creation complete after 1s [id=subnet-00d1a389b39d67a89]
module.vpc.aws_subnet.private_subnets[1]: Creation complete after 1s [id=subnet-017be521b219d8631]
module.vpc.aws_subnet.private_subnets[0]: Creation complete after 2s [id=subnet-0e9019c3c774218e9]
module.vpc.aws_internet_gateway.internet_assignment: Creation complete after 2s [id=igw-0d167c418c27a223a]
module.vpc.aws_route_table.public_rt: Creating...
module.vpc.aws_route_table.public_rt: Creation complete after 2s [id=rtb-08d6c4b3781537cf9]
module.vpc.aws_subnet.public_subnets[0]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[2]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[1]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[2]: Creation complete after 12s [id=subnet-059668912a7270cc8]
module.vpc.aws_subnet.public_subnets[0]: Creation complete after 12s [id=subnet-0e3a3116c9e6fe643]
module.vpc.aws_subnet.public_subnets[1]: Creation complete after 12s [id=subnet-01b22e73843f8f8db]
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[2]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[0]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[1]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creation complete after 1s [id=rtbassoc-0662930e506544c29]
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creation complete after 1s [id=rtbassoc-027f5fa287a31a0e5]
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creation complete after 1s [id=rtbassoc-04a8dfa40eb53611b]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Creation complete after 1m38s [id=nat-0dc41d9a832713bdf]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Creation complete after 1m48s [id=nat-06bb5e8773943e630]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [2m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [2m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Creation complete after 2m20s [id=nat-06af9e762a15d743f]
module.vpc.aws_route_table.private_rt[0]: Creating...
module.vpc.aws_route_table.private_rt[1]: Creating...
module.vpc.aws_route_table.private_rt[2]: Creating...
module.vpc.aws_route_table.private_rt[1]: Creation complete after 2s [id=rtb-079894eedbb462941]
module.vpc.aws_route_table.private_rt[2]: Creation complete after 2s [id=rtb-0f6e9fcbfee06ed65]
module.vpc.aws_route_table.private_rt[0]: Creation complete after 3s [id=rtb-0e04645357a5b666e]
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creation complete after 1s [id=rtbassoc-07a912b34c756616c]
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creation complete after 1s [id=rtbassoc-0a22789ea078743dd]
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creation complete after 1s [id=rtbassoc-050fbf4386a28462c]

Apply complete! Resources: 24 added, 0 changed, 0 destroyed.
