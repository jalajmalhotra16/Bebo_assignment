PS C:\Users\Jalaj Malhotra\Documents\time to grow\bebo\Bebo_assignment\assignment-2> terraform apply --auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[1] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[2] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.internet_assignment will be created
  + resource "aws_internet_gateway" "internet_assignment" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[0] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[1] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_nat_gateway.nat_assignment[2] will be created
  + resource "aws_nat_gateway" "nat_assignment" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[0] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[1] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt[2] will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt_for_db[0] will be created
  + resource "aws_route_table" "private_rt_for_db" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt_for_db[1] will be created
  + resource "aws_route_table" "private_rt_for_db" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private_rt_for_db[2] will be created
  + resource "aws_route_table" "private_rt_for_db" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[0] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[1] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc[2] will be created
  + resource "aws_route_table_association" "private_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc_for_db[0] will be created
  + resource "aws_route_table_association" "private_rt_assoc_for_db" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc_for_db[1] will be created
  + resource "aws_route_table_association" "private_rt_assoc_for_db" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private_rt_assoc_for_db[2] will be created
  + resource "aws_route_table_association" "private_rt_assoc_for_db" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[0] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[1] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public_rt_assoc[2] will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[0] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.48.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[1] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.64.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets[2] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.80.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets_for_db[0] will be created
  + resource "aws_subnet" "private_subnets_for_db" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.96.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet_for_db"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet_for_db"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets_for_db[1] will be created
  + resource "aws_subnet" "private_subnets_for_db" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.112.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet_for_db"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet_for_db"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private_subnets_for_db[2] will be created
  + resource "aws_subnet" "private_subnets_for_db" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.128.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Private Subnet_for_db"
        }
      + tags_all                                       = {
          + "Name" = "Private Subnet_for_db"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[0] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[1] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public_subnets[2] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "Public_subnet"
        }
      + tags_all                                       = {
          + "Name" = "Public_subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.vpc_assignment will be created
  + resource "aws_vpc" "vpc_assignment" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 33 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + nat_gateway_id            = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnet_for_db_ids = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnet_ids        = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + public_subnet_ids         = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + vpc_id                    = (known after apply)
module.vpc.aws_eip.nat[1]: Creating...
module.vpc.aws_eip.nat[2]: Creating...
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_vpc.vpc_assignment: Creating...
module.vpc.aws_eip.nat[2]: Creation complete after 2s [id=eipalloc-06c180ec2dd9388e0]
module.vpc.aws_eip.nat[0]: Creation complete after 2s [id=eipalloc-08bf8f7795d8b1748]
module.vpc.aws_eip.nat[1]: Creation complete after 2s [id=eipalloc-07250dbf71c7bff0e]
module.vpc.aws_vpc.vpc_assignment: Creation complete after 4s [id=vpc-0e50bc6e08392da8c]
module.vpc.aws_internet_gateway.internet_assignment: Creating...
module.vpc.aws_route_table.private_rt_for_db[2]: Creating...
module.vpc.aws_subnet.public_subnets[1]: Creating...
module.vpc.aws_subnet.private_subnets_for_db[0]: Creating...
module.vpc.aws_subnet.public_subnets[0]: Creating...
module.vpc.aws_subnet.public_subnets[2]: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creating...
module.vpc.aws_subnet.private_subnets_for_db[2]: Creating...
module.vpc.aws_subnet.private_subnets[0]: Creating...
module.vpc.aws_route_table.private_rt_for_db[0]: Creating...
module.vpc.aws_subnet.private_subnets_for_db[0]: Creation complete after 2s [id=subnet-0cae715fa65f45681]
module.vpc.aws_subnet.private_subnets[1]: Creating...
module.vpc.aws_internet_gateway.internet_assignment: Creation complete after 2s [id=igw-0f0e686b650c24ac6]
module.vpc.aws_subnet.private_subnets_for_db[1]: Creating...
module.vpc.aws_route_table.private_rt_for_db[2]: Creation complete after 2s [id=rtb-0788f7f19ec282169]
module.vpc.aws_route_table.private_rt_for_db[1]: Creating...
module.vpc.aws_subnet.private_subnets[0]: Creation complete after 2s [id=subnet-0a16896cd0d523b44]
module.vpc.aws_route_table.public_rt: Creating...
module.vpc.aws_subnet.private_subnets[2]: Creation complete after 2s [id=subnet-016166c62c715ee5e]
module.vpc.aws_subnet.private_subnets_for_db[2]: Creation complete after 2s [id=subnet-0a396e1b6acbf2d9a]
module.vpc.aws_route_table.private_rt_for_db[0]: Creation complete after 2s [id=rtb-0878d305707e919f8]
module.vpc.aws_subnet.private_subnets[1]: Creation complete after 1s [id=subnet-0a98d84df4c83c667]
module.vpc.aws_subnet.private_subnets_for_db[1]: Creation complete after 1s [id=subnet-07d8454f89d8ba74f]
module.vpc.aws_route_table.private_rt_for_db[1]: Creation complete after 1s [id=rtb-0a268f596ea3fad19]
module.vpc.aws_route_table_association.private_rt_assoc_for_db[0]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc_for_db[1]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc_for_db[2]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc_for_db[0]: Creation complete after 1s [id=rtbassoc-04d96ea86233f4d46]
module.vpc.aws_route_table_association.private_rt_assoc_for_db[1]: Creation complete after 1s [id=rtbassoc-067e9393eb018d54b]
module.vpc.aws_route_table_association.private_rt_assoc_for_db[2]: Creation complete after 1s [id=rtbassoc-031c7e2e44aba8db2]
module.vpc.aws_route_table.public_rt: Creation complete after 2s [id=rtb-03368153a2627fd21]
module.vpc.aws_subnet.public_subnets[1]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[0]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[2]: Still creating... [10s elapsed]
module.vpc.aws_subnet.public_subnets[1]: Creation complete after 13s [id=subnet-0a3a8d5d3a46b1c20]
module.vpc.aws_subnet.public_subnets[0]: Creation complete after 13s [id=subnet-0c340ed995875ed06]
module.vpc.aws_subnet.public_subnets[2]: Creation complete after 13s [id=subnet-07050743748163901]
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[2]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[1]: Creating...
module.vpc.aws_nat_gateway.nat_assignment[0]: Creating...
module.vpc.aws_route_table_association.public_rt_assoc[2]: Creation complete after 1s [id=rtbassoc-0e687e06ec24f4e22]
module.vpc.aws_route_table_association.public_rt_assoc[0]: Creation complete after 1s [id=rtbassoc-0879491b9ae42892f]
module.vpc.aws_route_table_association.public_rt_assoc[1]: Creation complete after 1s [id=rtbassoc-0d64bbc1938aa7d16]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[0]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[1]: Creation complete after 1m28s [id=nat-0de2dfa0a57b36314]
module.vpc.aws_nat_gateway.nat_assignment[0]: Creation complete after 1m28s [id=nat-0c339cc9d08d18012]
module.vpc.aws_nat_gateway.nat_assignment[2]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.nat_assignment[2]: Creation complete after 1m37s [id=nat-0418165d26cbc1591]
module.vpc.aws_route_table.private_rt[2]: Creating...
module.vpc.aws_route_table.private_rt[0]: Creating...
module.vpc.aws_route_table.private_rt[1]: Creating...
module.vpc.aws_route_table.private_rt[0]: Creation complete after 3s [id=rtb-07cceb1438366765a]
module.vpc.aws_route_table.private_rt[1]: Creation complete after 3s [id=rtb-0ab3f0c2368912c36]
module.vpc.aws_route_table.private_rt[2]: Creation complete after 3s [id=rtb-004f2ce2dd20c29f4]
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creating...
module.vpc.aws_route_table_association.private_rt_assoc[2]: Creation complete after 1s [id=rtbassoc-045e3d299ced36abd]
module.vpc.aws_route_table_association.private_rt_assoc[0]: Creation complete after 1s [id=rtbassoc-08dcb04a9af15d403]
module.vpc.aws_route_table_association.private_rt_assoc[1]: Creation complete after 1s [id=rtbassoc-04c5c31fec3b86366]

Apply complete! Resources: 33 added, 0 changed, 0 destroyed.

Outputs:

nat_gateway_id = [
  "nat-0c339cc9d08d18012",
  "nat-0de2dfa0a57b36314",
  "nat-0418165d26cbc1591",
]
private_subnet_for_db_ids = [
  "subnet-0cae715fa65f45681",
  "subnet-07d8454f89d8ba74f",
  "subnet-0a396e1b6acbf2d9a",
]
private_subnet_ids = [
  "subnet-0a16896cd0d523b44",
  "subnet-0a98d84df4c83c667",
  "subnet-016166c62c715ee5e",
]
public_subnet_ids = [
  "subnet-0c340ed995875ed06",
  "subnet-0a3a8d5d3a46b1c20",
  "subnet-07050743748163901",
]
vpc_id = "vpc-0e50bc6e08392da8c"
